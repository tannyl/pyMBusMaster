[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pyMBusMaster"
dynamic = ["version"]
description = "Modern async Python library for M-Bus (Meter-Bus) communication"
readme = "README.md"
license = "MIT"
requires-python = ">=3.13"
authors = [
    { name = "Your Name", email = "your.email@example.com" },
]
keywords = [
    "mbus",
    "meter-bus",
    "async",
    "asyncio",
    "serial",
    "home-assistant",
    "iot",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Home Automation",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Hardware :: Hardware Drivers",
]
dependencies = [
    "pyserial-asyncio-fast>=0.13",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "types-pyserial>=3.5.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
]

[project.urls]
Homepage = "https://github.com/tannyl/pyMBusMaster"
Documentation = "https://pymbusmaster.readthedocs.io"
Repository = "https://github.com/tannyl/pyMBusMaster"
Issues = "https://github.com/tannyl/pyMBusMaster/issues"
Changelog = "https://github.com/tannyl/pyMBusMaster/releases"

[tool.hatch.version]
path = "src/mbusmaster/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/mbusmaster"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--disable-warnings",
    "--cov=mbusmaster",
    "--cov-report=term-missing",
    "--cov-report=xml",
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.ruff]
target-version = "py313"
line-length = 88
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "temp",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["N802", "N803"]  # Allow non-lowercase function names in tests

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "serial.*",
    "serial_asyncio_fast.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["src/mbusmaster"]
omit = [
    "tests/*",
    "*/tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
